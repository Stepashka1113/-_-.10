import telebot
import random
from telebot import types
import requests
import sqlite3
import threading
import time
from datetime import datetime
from bs4 import BeautifulSoup
import asyncio
from aiogram import Bot



bot = telebot.TeleBot('') #—Ç–≤–æ–π —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å


conn = sqlite3.connect('weather_forecast.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS forecast (
    date TEXT PRIMARY KEY,
    today_temp INTEGER,
    tomorrow_temp INTEGER
)
''')
cursor.execute('''
CREATE TABLE IF NOT EXISTS subscriptions (
    user_id INTEGER PRIMARY KEY
)
''')
conn.commit()



def save_forecast(date, today, tomorrow):
    cursor.execute('REPLACE INTO forecast (date, today_temp, tomorrow_temp) VALUES (?, ?, ?)', (date, today, tomorrow))
    conn.commit()

def get_eco_news():
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        news_url = "https://ria.ru/ecology/"  
        r = requests.get(news_url, headers=headers, timeout=10)
        soup = BeautifulSoup(r.text, 'html.parser')

        news_elements = soup.select('a.list-item__title.color-font-hover-only')[:5]

        news_list = []
        for item in news_elements:
            title = item.get_text(strip=True)
            link = item['href']
            news_list.append(f"üì∞ {title}\nüîó {link}")

        return "\n\n".join(news_list) if news_list else "–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –Ω–æ–≤–æ—Å—Ç–µ–π:", e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π."

def get_potep_news():
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        news_url = "https://ria.ru/keyword_globalnoe_poteplenie/"  
        r = requests.get(news_url, headers=headers, timeout=10)
        soup = BeautifulSoup(r.text, 'html.parser')

        news_elements = soup.select('a.list-item__title.color-font-hover-only')[:5]

        news_list = []
        for item in news_elements:
            title = item.get_text(strip=True)
            link = item['href']
            news_list.append(f"üì∞ {title}\nüîó {link}")

        return "\n\n".join(news_list) if news_list else "–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –Ω–æ–≤–æ—Å—Ç–µ–π:", e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π."


def global_warming_info():
    return ("üåç –ß—Ç–æ —Ç–∞–∫–æ–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ?\n"
            "–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ ‚Äî —ç—Ç–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ó–µ–º–ª–∏ –∏–∑-–∑–∞ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤.\n\n"
            "üå° –ü—Ä–∏—á–∏–Ω—ã:\n"
            "1. –°–∂–∏–≥–∞–Ω–∏–µ —Ç–æ–ø–ª–∏–≤–∞\n2. –í—ã—Ä—É–±–∫–∞ –ª–µ—Å–æ–≤\n3. –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è\n\n"
            "üåø –ö–∞–∫ –ø–æ–º–æ—á—å:\n"
            "1. –°–Ω–∏–∑—å—Ç–µ –≤—ã–±—Ä–æ—Å—ã\n2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–µ–ª—ë–Ω—É—é —ç–Ω–µ—Ä–≥–∏—é\n3. –≠–∫–æ–Ω–æ–º—å—Ç–µ —Ä–µ—Å—É—Ä—Å—ã\n4. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –ø—Ä–∏—Ä–æ–¥—É.")



@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ")
    markup.add("–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã", "–£–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥", "–≠–∫–æ-–Ω–æ–≤–æ—Å—Ç–∏", '–ù–æ–≤–æ—Å—Ç–∏ –ì–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è')

    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ –ø–æ–≥–æ–¥—É –∏ –∫–ª–∏–º–∞—Ç. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ üëá", reply_markup=markup)


def daily_forecast_job():
    while True:
        now = datetime.now()
        if now.hour == 8:
        
                
            time.sleep(3600)
        else:
            time.sleep(300)

threading.Thread(target=daily_forecast_job, daemon=True).start()

# –£–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥
user_carbon_progress = {}

@bot.message_handler(func=lambda message: message.text == "–£–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥")
def carbon_start(message):
    user_carbon_progress[message.chat.id] = {"step": 1, "score": 0}
    bot.send_message(message.chat.id, "üöó –í–æ–ø—Ä–æ—Å 1: –ö–∞–∫ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ª–∏—á–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç?\n1. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å\n2. –ò–Ω–æ–≥–¥–∞\n3. –ù–∏–∫–æ–≥–¥–∞")

@bot.message_handler(func=lambda message: message.chat.id in user_carbon_progress)
def carbon_calc(message):
    state = user_carbon_progress[message.chat.id]
    step = state["step"]
    text = message.text.strip()
    if step == 1:
        state["score"] += {"1": 3, "2": 2, "3": 0}.get(text, 0)
        state["step"] = 2
        bot.send_message(message.chat.id, "üí° –í–æ–ø—Ä–æ—Å 2: –í—ã –≤—ã–∫–ª—é—á–∞–µ—Ç–µ —Å–≤–µ—Ç, —É—Ö–æ–¥—è –∏–∑ –∫–æ–º–Ω–∞—Ç—ã?\n1. –í—Å–µ–≥–¥–∞\n2. –ò–Ω–æ–≥–¥–∞\n3. –ù–∏–∫–æ–≥–¥–∞")
    elif step == 2:
        state["score"] += {"1": 0, "2": 1, "3": 2}.get(text, 0)
        state["step"] = 3
        bot.send_message(message.chat.id, "üçΩ –í–æ–ø—Ä–æ—Å 3: –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –µ–¥–∏—Ç–µ –º—è—Å–æ?\n1. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å\n2. –ò–Ω–æ–≥–¥–∞\n3. –†–µ–¥–∫–æ –∏–ª–∏ –Ω–∏–∫–æ–≥–¥–∞")
    elif step == 3:
        state["score"] += {"1": 3, "2": 2, "3": 0}.get(text, 0)
        total = state["score"]
        del user_carbon_progress[message.chat.id]
        if total <= 3:
            msg = "üü¢ –í–∞—à —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥ –Ω–∏–∑–∫–∏–π ‚Äî –≤—ã –º–æ–ª–æ–¥–µ—Ü!"
        elif total <= 6:
            msg = "üü° –°—Ä–µ–¥–Ω–∏–π —Å–ª–µ–¥ ‚Äî –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å."
        else:
            msg = "üî¥ –í—ã—Å–æ–∫–∏–π —É–≥–ª–µ—Ä–æ–¥–Ω—ã–π —Å–ª–µ–¥ ‚Äî –ø–æ–¥—É–º–∞–π—Ç–µ –æ –ø–µ—Ä–µ–º–µ–Ω–∞—Ö!"
        bot.send_message(message.chat.id, f"üåç –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {total} –±–∞–ª–ª–æ–≤\n{msg}")



@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ":
        bot.send_message(message.chat.id, global_warming_info())
    elif message.text == "–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã":
        bot.send_message(message.chat.id, "‚úÖ –°–æ–≤–µ—Ç—ã:\n1. –≠–∫–æ–Ω–æ–º—å—Ç–µ —ç–Ω–µ—Ä–≥–∏—é‚ö°\n2. –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Çüöå\n3. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º—É—Å–æ—Ä–∞‚ôªÔ∏è\n4. –ú–µ–Ω—å—à–µ –ø–ª–∞—Å—Ç–∏–∫–∞üåç")
    elif message.text == "–≠–∫–æ-–Ω–æ–≤–æ—Å—Ç–∏":
        news = get_eco_news()
        bot.send_message(message.chat.id, news)
    elif message.text == "–ù–æ–≤–æ—Å—Ç–∏ –ì–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è":
        news = get_potep_news()
        bot.send_message(message.chat.id, news)

    else:
        bot.send_message(message.chat.id, "‚ùì –Ø –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É.")


bot.polling()
